---
# Stylua
- name: "stylua: install"
  community.general.cargo:
    name: "stylua"
- name: "stylua: create configuration directory"
  file:
    path: "{{ home_dir }}/.config/stylua"
    state: directory
    mode: "0755"
- name: "stylua: install configuration"
  template:
    src: templates/stylua.toml.j2
    dest: "{{ home_dir }}/.config/stylua/stylua.toml"
    mode: "0644"

# Clang Format
- name: "clang-format: install"
  become: true
  apt:
    name:
      - clang-format

# Prettier
- name: "prettier: install"
  community.general.npm:
    name: prettier
    global: true

# Shfmt
- name: "shfmt: check if installed"
  shell:
    cmd: |
      . "${HOME}/.profile"
      shfmt --version
  register: shfmt_status
  ignore_errors: true
  changed_when: false
- name: "shfmt: download (x86_64)"
  when:
    - shfmt_status is failed
    - ansible_architecture == "x86_64"
  get_url:
    url: "https://github.com/mvdan/sh/releases/download/{{ shfmt_version }}/shfmt_{{ shfmt_version }}_linux_amd64"
    dest: /tmp/shfmt
    mode: "0755"
- name: "shfmt: download (aarch64)"
  when:
    - shfmt_status is failed
    - ansible_architecture == "aarch64"
  get_url:
    url: "https://github.com/mvdan/sh/releases/download/{{ shfmt_version }}/shfmt_{{ shfmt_version }}_linux_arm64"
    dest: /tmp/shfmt
    mode: "0755"
    force: "yes"
- name: "shfmt: create directory"
  when: shfmt_status is failed
  file:
    path: "{{ apps_dir }}/shfmt/bin"
    state: directory
    mode: "0755"
- name: "shfmt: install"
  when: shfmt_status is failed
  copy:
    src: "/tmp/shfmt"
    dest: "{{ apps_dir }}/shfmt/bin/shfmt"
    remote_src: true
    mode: "0755"

# Black
- name: "black: install"
  become: true
  apt:
    name:
      # TODO: Check if works on older OSes.
      - black

# Stylish haskell
- name: "stylish-haskell: check if installed"
  when:
    - external.haskell.enable == true
  shell:
    cmd: |
      . "${HOME}/.profile"
      stylish-haskell --version
  register: stylish_haskell_installed
  ignore_errors: true
  changed_when: false
- name: "stylish-haskell: install"
  when:
    - external.haskell.enable == true
    - stylish_haskell_installed is failed
  shell:
    cmd: |
      . "${HOME}/.profile"
      cabal install stylish-haskell

# Csharpier
- name: "csharpier: check if installed"
  shell:
    cmd: |
      . "${HOME}/.profile"
      dotnet csharpier --version
  register: csharpier_installed
- name: "csharpier: install"
  when:
    - csharpier_installed is failed
  shell:
    cmd: |
      . "${HOME}/.profile"
      dotnet tool install csharpier -g
